@charset 'utf-8';

/* At-Rules são declarações, regras, que dizem como o CSS deve se comportar, geralmente puxam alguma informação externa. Iniciam com a arroba (@ = at) */

@import
/*Ícone Menu.. Agora como usa?*/ 
url(https://fonts.gstatic.com/s/i/materialiconsoutlined/menu/v13/24px.svg);

/*====================================================*/

/*Dá para criar "variáveis" (custom properties) no CSS e guardar valores para usar mais tarde. 
Sintaxe:
elemento{ 
   --nome-da-propriedade: valor; 
}

Para chamar, use o seguinte método? como um valor:
   var(--minha-variavel)
As variáveis funcionam no elemento em que estiverem. Se você quer que ela funcione globalmente, coloque dentro da pseudo-classe "root"*/

:root{
   --cor-bg-1: #e6e1e1;
   --cor-bg-2: #2f3131;
   --cor-bg-3: #585c5c;
   --cor-txt: #181717;
   --cor-link-1: #e6e5eb;
   --fonte-1: Segoe UI;
   --sombra-1: 0 0 12px 1px #808585;
   --sombra-2: 0 0 12px #2b2c2c;

}

html{
   font: 12pt var(--fonte-1);
   color: var(--cor-01);
   background-color: var(--cor-bg-1); }
*{
   margin: 0;
   padding: 0;
   z-index: 0;
}

main, section{
   min-width: 250px;
   max-width: 600px;
   margin: 16px 0;
   background-color: var(--cor-bg-1);
   box-shadow: var(--sombra-1);
   justify-content: center;  
   justify-self: center;
}

h3, p{
   margin: 8px 20px;
}

a{
   color: var(--cor-bg-1);
   text-decoration: none; }

body{
   margin: 0;
   display: grid;
   justify-self: center;
   grid-template-columns: 1fr, 80vw, 1fr;
   grid-template-rows: 1fr, repeat(3fr), 2fr;
   grid-template-areas: "H H H"
                        ". M ."
                        ". S ."
                        "F F F"; }
/*=== Cabeçalho ===============================*/
header{
   background-color: var(--cor-bg-2);
   color: var(--cor-bg-1);
   box-shadow: var(--sombra-2);
   grid-area: H;
   position: sticky;
   top: 0;
   display: flex;
   flex-direction: row;
   align-items: center;
   gap: 12px;
   padding: 6px 10vw;
   z-index: 1;
   
}
   header > :nth-child(n+3){ 
      /*pega o terceiro filho e todos os seguintes. Ou seja, pula o primeiro.*/
      order: 1; }
   header > :nth-child(-n+2){
      /*Pega os dois primeiros filhos. Isso tudo é para colocar o menu como primeiro elemento.*/
      order: 2; }

   /*--- Navegação ------------*/
   .menu_lista{
   display: flex; }

      .item_lista{ 
      display: none;
      margin: 0;
      flex-wrap: nowrap;
      justify-content: center; }
      
      .menu_lista:hover > .item_lista{
      display: inline-block;}

      .item_lista > ul > li{
      padding: 5px 10px;
      margin: 0;
      display: inline-block; }

      .item_lista > ul > li:hover{
      background-color: var(--cor-bg-3); }

/*=== Principal ===============================*/
main{
   grid-area: M; }
   /*--- Imagem ---------------*/
   .figure{
      height: 30vh; }
   .figure > img {
      width: 100%;
      height: inherit;
      object-fit: cover; /*Object fit ajuda a manter a proporção da imagem ao alterar o tamanho.*/ }

/*=== Seção ===============================*/
section{
   grid-area: S; }
   .secao1 > ul{
      display: flex;
      flex-wrap: wrap;
      flex-direction: row;
      padding-left: 30px; 
      list-style-type: square;}
   .secao1 > ul > li{
      margin: 0 20px;
   }


/*=== Rodapé ===============================*/
footer{
   grid-area: F;
}
/*Não tive muito tempo para trabalhar no CSS do rodapé*/

/*=== Página PHP ===============================*/
button{
   background-color: var(--cor-bg-2);
}

